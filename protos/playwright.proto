syntax = "proto3";

message Empty {}

message screenshotRequest {
  string path = 1;
}

message openBrowserRequest {
  string url = 1;
  string browser = 2;
}

message goToRequest {
  string url = 1;
}

message inputTextRequest {
  string input = 1;
  string selector = 2;
}

message getDomPropertyRequest {
  string property = 1;
  string selector = 2;
}

message selectorRequest {
  string selector = 1;
}

message Response {
  message Empty {
    string log = 1;
  }
  message String {
    string log = 1;
    string body = 2;
  }
}

service  Playwright {
  rpc Screenshot(screenshotRequest) returns (Response.Empty) {}
  rpc OpenBrowser(openBrowserRequest) returns (Response.Empty) {}
  rpc CloseBrowser(Empty) returns (Response.Empty) {}
  /* Opens the url in currently open Playwright page */ 
  rpc GoTo(goToRequest) returns (Response.Empty) {}
  /* Gets title of currently open Playwright page */
  rpc GetTitle(Empty) returns (Response.String) {}
  /* Wraps playwrights page.fill to input text into input specified with selector */ 
  rpc InputText(inputTextRequest) returns (Response.Empty) {}
  /* Gets the DOM property 'property' of selector specified element */
  rpc GetDomProperty(getDomPropertyRequest) returns (Response.String) {}
  /* Wraps playwrights page.textContent, returns textcontent of element by selector */
  rpc GetTextContent(selectorRequest) returns (Response.String) {}
  /* *Returns current playwright page url*/
  rpc GetUrl(Empty) returns (Response.String) {}
  /* Clicks button specified by selector */ 
  rpc ClickButton(selectorRequest) returns (Response.Empty) {}
  /* Checks checkbox specified by selector */
  rpc CheckCheckbox(selectorRequest) returns (Response.Empty) {}
  /* Unchecks checkbox specified by selector */
  rpc UncheckCheckbox(selectorRequest) returns (Response.Empty) {}
  /* Health check endpoint for the service */
  rpc Health(Empty) returns (Response.String) {}
}
